Version control helps track changes in files over time and allows collaboration between developers. There are 3 main types of version control systems:
1. Local Version Control System (LVCS)

    Stores versions only on your local computer.

    Simple and fast but not good for collaboration.

    No backup if your computer crashes.

Example:

    RCS (Revision Control System)

ðŸ’¡ Use Case: Single developer working alone on one machine.
2. Centralized Version Control System (CVCS)

    All versions are stored on a central server.

    Developers pull (checkout) code and push (commit) changes to the server.

    Requires internet/network connection.

    Risk: If the server fails, the project history may be lost.

Examples:

    SVN (Apache Subversion)

    CVS (Concurrent Versions System)

    Perforce

ðŸ’¡ Use Case: Teams working in the same location with a stable network.
3. Distributed Version Control System (DVCS) âœ… (Most popular today)

    Every developer has a full copy of the entire project history.

    Works offline â€” you can commit without internet.

    Safe â€” code and history are backed up on every developerâ€™s machine.

    Great for collaboration and branching.

Examples:

    Git (most widely used)

    Mercurial

    Bazaar

ðŸ’¡ Use Case: Open-source and large software teams (e.g., Git + GitHub).